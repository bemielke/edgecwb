/**
 * Gradle Build Script.
 *
 * Use Gradle 4.9+.
 */

plugins {
  id "java"
  id "jacoco"                                     // code coverage
  id "pmd"                                        // static code analysis
  id "com.gradle.build-scan" version "1.16"       // post build results online
  id "org.ajoberstar.grgit" version "2.3.0"       // git repo information
  id "org.ajoberstar.git-publish" version "1.0.1" // publish gh-pages branch
}

pmd.ignoreFailures=true

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
  mavenCentral()
  maven {
      url "http://devel.uji.es/nexus/content/repositories/releases/"
  }
}

configurations {
  codacy
}

repositories {
   flatDir {
       dirs 'libs'
   }
}

dependencies {
  codacy "com.codacy:codacy-coverage-reporter:4.0+"

  // javax.json
  compile "javax.json:javax.json-api:1.1"
  compile "org.glassfish:javax.json:1.1"
  // database drivers
  compile "mysql:mysql-connector-java:5.1.47"
  compile "org.xerial:sqlite-jdbc:3.23.1"
  compile group: 'org.jasypt', name: 'jasypt', version: '1.9.0'
  compile group: 'org.jdesktop', name: 'swing-layout', version: '1.0.3'

  // compile files("lib/JARFILE.JAR")
  compile fileTree(include: ['*.jar'], dir: 'libs')
  

  testCompile "junit:junit-dep:4.11"
}

sourceSets {
//  main {
//    // java.excludes = ["**/XmlVerifier*"]
//  }
  cwblib {    
        
  }
}

// show compile warnings
tasks.withType(JavaCompile) {
  options.setDeprecation(true);
  options.setWarnings(true);
}

// coverage reports
jacoco {
  toolVersion "0.8.2"
}
jacocoTestReport {
  reports {
    html.enabled true
    xml.enabled true
  }
}
check.dependsOn jacocoTestReport

test {
  filter {
    includeTestsMatching "*Test"
  }
}

// clean up after tests
task testCleanup {
  doLast {
    delete("bin")
  }
}
clean.dependsOn testCleanup
test.dependsOn testCleanup


// Tasks for building releases

// create javadocs
javadoc {
  excludes = ['com/isti/**']
  options.addBooleanOption('html5', true)
}

// create jar file
jar {
  baseName = "EdgeCWB"
  manifest {
    attributes "Git-Commit": grgit.head().id
    // attributes "Main-Class": "gov.usgs.edge.MainClass"
  }
  from {
    // classes and dependencies
    configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    sourceSets.cwblib.output
  }
}

// create zip bundle
task createZip(type: Zip, dependsOn: jar) {
  archiveName "EdgeCWB.zip"
  // init scripts and README
  // from "etc/examples/default"
  // example listeners
  // from ("etc/examples/client/bin") { include "ExampleListener.*" }
  // EdgeCWB.jar
  from jar
}

// publish documentation and reports to gh-pages
// use after every release
gitPublish {
  repoUri = "git@github.com:usgs/edgecwb.git"
  branch = "gh-pages"

  contents {
    from "docs"
    from createZip
    from jar
    from (javadoc) {
      into "javadoc"
    }
    from (test) {
      into "test"
      exclude "*.bin"
      exclude "*.idx"
      exclude "*.xml"
    }
    from (jacocoTestReport) {
      into "coverage"
      exclude "*.xml"
    }
  }
}


// Tasks for TravisCI

// run with "gradle build --scan" to post build output online
buildScan {
  termsOfServiceUrl = "https://gradle.com/terms-of-service"
  termsOfServiceAgree = "yes"
}

// .travis.yml uses this to upload coverage
task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) {
  description = "Upload coverage to codacy (used by TravisCI)"
  main = "com.codacy.CodacyCoverageReporter"
  classpath = configurations.codacy
  args = [
    "report",
    "-l",
    "Java",
    "-r",
    "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
  ]
}


subprojects {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "pmd" 
    pmd.ignoreFailures=true
}

project (':cwblib') {
    
    repositories {
        flatDir {
            dirs "${rootDir}libs"
        }
        mavenCentral()
        maven {
            url "http://devel.uji.es/nexus/content/repositories/releases/"
        }
    }  
    dependencies {
        compile group: 'org.jasypt', name: 'jasypt', version: '1.9.0'
        compile group: 'org.jdesktop', name: 'swing-layout', version: '1.0.3'
        compile fileTree(include: ['*.jar'], dir: "${rootDir}/libs")
    }
}

