/*
 *  This software is in the public domain because it contains materials 
 *  that originally came from the United States Geological Survey, 
 *  an agency of the United States Department of Interior. For more 
 *  information, see the official USGS copyright policy at 
 *  http://www.usgs.gov/visual-id/credit_usgs.html#copyright
 */
package gov.usgs.edge.config;
import gov.usgs.anss.util.ErrorTrack;
import gov.usgs.anss.util.FUtil;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
/**
 *
 * @author U.S. Geological Survey  <ketchum at usgs.gov>
 */
public final class SubspaceChannelPanelOrg extends javax.swing.JPanel {
  SubspaceChannel chan;
  double hpcorn,lpcorn, detectThreshold,templateDur;
  int np;
  public SubspaceChannel getSubspaceChannel() {return chan;}
  /**
   * Creates new form SubspaceChannelPanel
   * @param ch
   */
  public SubspaceChannelPanelOrg(SubspaceChannel ch) {
    initComponents();
    if(ch != null) chan = ch;
    doOldOne();
  }
  public void reload(ResultSet rs ) throws SQLException {
    chan = new SubspaceChannel(rs);
    doOldOne();
  }
  public void chkForm(ErrorTrack err) {
    hpcorn = FUtil.chkDouble(hpCorner, err, 0.001, 100.);
    lpcorn = FUtil.chkDouble(lpCorner, err, 0.001, 100.);
    np = FUtil.chkInt(npoles, err,0,10);
    detectThreshold  = FUtil.chkDouble(detectionThreshold, err, 0, 100.);
    templateDur = FUtil.chkDouble(templateDuration, err, 0, 1000.);
    if(detectionThresholdType.getSelectedIndex() < 0) {err.set(); err.appendText("detection Threshold type not selected");}
    if(filterType.getSelectedIndex() < 0) {err.set(); err.appendText("Filter type not selected");}
  }
  /** Update the current GUI fields to DB for this channel
   * 
   * @param db A database statement to use
   * @throws SQLException 
   */
  public void updateRecord(Statement db) throws SQLException {
    String s = "UPDATE edge.subspacechannel SET "+
            "hpcorner="+hpcorn+","+"lpcorner="+lpcorn+",npoles="+np+",detectionthreshold="+detectThreshold+
            ",templateduration="+templateDur+",filtertype='"+filterType.getSelectedItem()+
            "',detectionthresholdtype='"+detectionThresholdType.getSelectedItem()+
            "' WHERE id="+chan.getID();
    db.executeUpdate(s);
            
  }
  private void doOldOne() {
    gov.usgs.edge.config.UC.Look(this);
    hpCorner.setText(chan.getHPCorner()+"");
    lpCorner.setText(chan.getLPCorner()+"");
    npoles.setText(chan.getNpoles()+"");
    filterType.setSelectedIndex(-1);
    templateDuration.setText(chan.getTemplateDuration()+"");
    channelText.setText(chan.getFixedToString().toString());
    for(int i=0; i<filterType.getItemCount(); i++) 
      if(((String) filterType.getItemAt(i)).equalsIgnoreCase(chan.getFilterType())) {filterType.setSelectedIndex(i); break;}
    detectionThreshold.setText(chan.getDetectionThreshold()+"");
    detectionThresholdType.setSelectedIndex(-1);
    for(int i=0; i<detectionThresholdType.getItemCount(); i++) 
      if(((String) detectionThresholdType.getItemAt(i)).equalsIgnoreCase(chan.getDetectionType())) {
        detectionThresholdType.setSelectedIndex(i); 
        break;
      }
  }
  
  private void updateFromPanel() {
    
  }
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    channelText = new javax.swing.JTextField();
    labHP = new javax.swing.JLabel();
    hpCorner = new javax.swing.JTextField();
    labLP = new javax.swing.JLabel();
    lpCorner = new javax.swing.JTextField();
    labDetThres = new javax.swing.JLabel();
    detectionThreshold = new javax.swing.JTextField();
    filterType = new javax.swing.JComboBox();
    labDur = new javax.swing.JLabel();
    templateDuration = new javax.swing.JTextField();
    detectionThresholdType = new javax.swing.JComboBox();
    labNpoles = new javax.swing.JLabel();
    npoles = new javax.swing.JTextField();

    setMinimumSize(new java.awt.Dimension(600, 96));
    setPreferredSize(new java.awt.Dimension(600, 96));

    channelText.setFont(new java.awt.Font("Monospaced", 0, 8)); // NOI18N
    channelText.setMinimumSize(new java.awt.Dimension(250, 26));
    channelText.setPreferredSize(new java.awt.Dimension(250, 26));

    labHP.setText("HPCorner (Hz):");

    hpCorner.setMinimumSize(new java.awt.Dimension(60, 26));
    hpCorner.setPreferredSize(new java.awt.Dimension(60, 26));

    labLP.setText("LPCorner (Hz):");

    lpCorner.setMinimumSize(new java.awt.Dimension(60, 26));
    lpCorner.setPreferredSize(new java.awt.Dimension(60, 26));

    labDetThres.setText("DetectionThreshold:");

    detectionThreshold.setMinimumSize(new java.awt.Dimension(60, 26));
    detectionThreshold.setPreferredSize(new java.awt.Dimension(60, 26));

    filterType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BandPass", "LowPass", "HighPass", "None", " " }));

    labDur.setText("TemplateDuration (s): ");

    templateDuration.setMinimumSize(new java.awt.Dimension(60, 26));
    templateDuration.setPreferredSize(new java.awt.Dimension(60, 26));

    detectionThresholdType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Constant", "None" }));
    detectionThresholdType.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        detectionThresholdTypeActionPerformed(evt);
      }
    });

    labNpoles.setText("Npoles:");

    npoles.setMinimumSize(new java.awt.Dimension(30, 26));
    npoles.setPreferredSize(new java.awt.Dimension(30, 26));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(labHP)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(hpCorner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(labLP)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lpCorner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labNpoles)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(npoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(filterType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(263, Short.MAX_VALUE))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(channelText, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(layout.createSequentialGroup()
                .addComponent(labDur)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(templateDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labDetThres)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detectionThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(detectionThresholdType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(0, 0, Short.MAX_VALUE))))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(channelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(labHP)
          .addComponent(hpCorner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(labLP)
          .addComponent(lpCorner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(filterType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(labNpoles)
          .addComponent(npoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(detectionThresholdType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(labDur)
          .addComponent(detectionThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(labDetThres)
          .addComponent(templateDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void detectionThresholdTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detectionThresholdTypeActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_detectionThresholdTypeActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField channelText;
  private javax.swing.JTextField detectionThreshold;
  private javax.swing.JComboBox detectionThresholdType;
  private javax.swing.JComboBox filterType;
  private javax.swing.JTextField hpCorner;
  private javax.swing.JLabel labDetThres;
  private javax.swing.JLabel labDur;
  private javax.swing.JLabel labHP;
  private javax.swing.JLabel labLP;
  private javax.swing.JLabel labNpoles;
  private javax.swing.JTextField lpCorner;
  private javax.swing.JTextField npoles;
  private javax.swing.JTextField templateDuration;
  // End of variables declaration//GEN-END:variables
}
