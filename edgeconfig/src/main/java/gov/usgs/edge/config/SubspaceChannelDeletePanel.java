/*
 *  This software is in the public domain because it contains materials 
 *  that originally came from the United States Geological Survey, 
 *  an agency of the United States Department of Interior. For more 
 *  information, see the official USGS copyright policy at 
 *  http://www.usgs.gov/visual-id/credit_usgs.html#copyright
 */
package gov.usgs.edge.config;


import gov.usgs.anss.db.DBConnectionThread;
import gov.usgs.anss.util.Util;
import java.awt.Dimension;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JLabel;


/**
 *
 * @author bmielke
 */
public class SubspaceChannelDeletePanel extends javax.swing.JPanel {
  //USER: set this for the upper case conversion of keys.
  private final boolean keyUpperCase=false;    // set this true if all keys must be upper case
  //USER: Here are the local variables
  int np;
  StringBuilder sbtmp = new StringBuilder(1000);
  int areaID;
  SubspaceAreaPanel areaPanel;
  ArrayList<SubspaceChannel> subspaceChannels; 
  // NOTE : here define all variables general.  "ArrayList v" is used for main Comboboz
  private void doInit() {
  // Good place to add UC.Looks()    
    gov.usgs.anss.util.UC.Look(this);  
    gov.usgs.anss.util.UC.Look(channelSelectPanel);  // Set color background
    gov.usgs.anss.util.UC.Look(channelScroll);

  }
  
  public void updateRemoveButton() {
    boolean removeEnable = false;
    if (SubspaceAreaPanel.isEditable()) {
      for (java.awt.Component csp : channelSelectPanel.getComponents()) {
        if (((SubspaceChannelDeleteSubPanel) csp).isSelected()) {
          removeEnable = true;
          break;
        }
      }
      removeButton.setToolTipText("Click to remove checked stations.");
    } else {
      removeButton.setToolTipText("Area is not in editable state.");
    }
    removeButton.setEnabled(removeEnable);
  }
  
  /*
  * Set areaID = 0 to just repaint.
  */
  public void setAreaID(int areaID) {
    if (areaID != 0)  this.areaID = areaID;
    if(areaID <= 0) {
      removeButton.setEnabled(false);
      return;
    }
    removeButton.setEnabled(true);
    subspaceChannels = SubspaceChannelPanel.getSubspaceChannelArrayList();
    channelSelectPanel.removeAll();    
    int height=0;
    int width=0;
    for (SubspaceChannel subspaceChannel : subspaceChannels) {
      if (subspaceChannel.getAreaID() != this.areaID) continue; 
      SubspaceChannelDeleteSubPanel cp = new SubspaceChannelDeleteSubPanel(subspaceChannel,this);
      height += cp.getPreferredSize().getHeight()+10;
      width = (int) cp.getPreferredSize().getWidth();
      channelSelectPanel.add(cp);
    }
    updateRemoveButton();
            
    if(height == 0.) {
      channelSelectPanel.add(new JLabel("No channels returned."));
      height=400;
      width=500;
    }
    channelSelectPanel.invalidate();
    channelSelectPanel.setPreferredSize(new Dimension((int) width, (int) height));
    channelSelectPanel.setMinimumSize(new Dimension((int) width, (int) height));
    channelSelectPanel.validate();
    channelSelectPanel.repaint();    
    validate();
    
  }
  
  private void displayErrorMessage(String err) {
    removeButton.setEnabled(false);
    channelSelectPanel.removeAll();
    channelSelectPanel.add(new SubspaceChannelDeleteErrorPanel(this,err));
    channelSelectPanel.invalidate();
    channelSelectPanel.setPreferredSize(new Dimension(500, 400));
    channelSelectPanel.setMinimumSize(new Dimension(500, 400));
    channelSelectPanel.validate();
    channelSelectPanel.repaint();    
    validate();
  }
  
  protected final void clearScreen() {
    
    // Do not change
    areaID = 0;
    channelSelectPanel.removeAll();
  }

  /**
   * Creates new form SubspaceChannelPickPanel
   * @param area SubspaceAreaPanel
   */
  public SubspaceChannelDeletePanel(SubspaceAreaPanel area) {
    areaPanel = area;
//    initiating=true;
//    initiating=false;
    areaID=0;
    // USER:This is a good place for UC.Look(components) to get rid of the ugly Grey
    initComponents();
    doInit();
//    clearScreen();      
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    channelScroll = new javax.swing.JScrollPane();
    channelSelectPanel = new javax.swing.JPanel();
    removeButton = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();

    setPreferredSize(new java.awt.Dimension(710, 670));

    channelScroll.setViewportView(channelSelectPanel);

    removeButton.setText("Remove Selected");
    removeButton.setEnabled(false);
    removeButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        removeButtonActionPerformed(evt);
      }
    });

    jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setLabelFor(channelScroll);
    jLabel1.setText("Select the channels to be removed:");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(46, 46, 46)
            .addComponent(channelScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addGap(291, 291, 291)
            .addComponent(removeButton))
          .addGroup(layout.createSequentialGroup()
            .addGap(146, 146, 146)
            .addComponent(jLabel1)))
        .addContainerGap(54, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(105, 105, 105)
        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(channelScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(removeButton)
        .addContainerGap(48, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
    // TODO add your handling code here:    
    for (java.awt.Component csp : channelSelectPanel.getComponents()) {
      if (((SubspaceChannelDeleteSubPanel) csp).isSelected()) {
        try (Statement stmt = DBConnectionThread.getConnection(DBConnectionThread.getDBSchema()).createStatement() // used for query
                ) {
          String sql = "DELETE FROM edge.subspacechannel WHERE id = " + ((SubspaceChannelDeleteSubPanel) csp).getChannelId();
          stmt.executeUpdate(sql);
          sql = "DELETE FROM edge.subspaceeventchannel WHERE channelID = " + ((SubspaceChannelDeleteSubPanel) csp).getChannelId();
          stmt.executeUpdate(sql);
        } catch (SQLException e) {
          Util.SQLErrorPrint(e, "deleting channel=" + ((SubspaceChannelDeleteSubPanel) csp).getName() + "SQL failed");          
          displayErrorMessage("Error deleting channels, SQL failed!");
          
        }
      }
    }
    areaPanel.updateChannelPanels();
  }//GEN-LAST:event_removeButtonActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane channelScroll;
  private javax.swing.JPanel channelSelectPanel;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JButton removeButton;
  // End of variables declaration//GEN-END:variables
}
